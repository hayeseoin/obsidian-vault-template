###### â†’ Siblings
```dataviewjs
// START assets/templates/dataview/dv-siblings-table.md
const template_version = "0.9.0"

const current = dv.current();

// Get tags from frontmatter (plain array) or file tags (dataview object)
let currentTags = current.tags || []; // frontmatter tags are plain array
if (current.file.etags && current.file.etags.values) {
    // Merge with file tags, removing # prefix
    const fileTags = current.file.etags.values.map(tag => tag.replace('#', ''));
    currentTags = [...new Set([...currentTags, ...fileTags])]; // deduplicate
}

if (currentTags.length === 0) {
    dv.paragraph("No tags found in this note.");
} else {
    // Find the most nested tag (longest path)
    const mostNestedTag = currentTags.reduce((longest, tag) => 
        tag.length > longest.length ? tag : longest, ""
    );

    // Get all pages with the exact same tag
    const siblings = dv.pages(`#${mostNestedTag}`)
        .where(p => p.file.name !== current.file.name) // Exclude current file
        .sort(p => p.file.name);

    if (siblings.length > 0) {
        let siblingContent = "";
        siblings.forEach(page => {
            siblingContent += `> - [[${page.file.name}]]\n`;
        });
        
        dv.paragraph(siblingContent.trim());
    } else {
        dv.paragraph("No sibling notes found.");
    }
}
// END assets/templates/dataview/dv-siblings-table.md

```
